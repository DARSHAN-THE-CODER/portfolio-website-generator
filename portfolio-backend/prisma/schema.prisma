// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  email         String         @unique
  username      String         @unique  
  name          String
  password      String
  address       String
  photoURL      String 
  gender        String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  shortDesc     String
  about         String
  phone         String
  socialLinks   SocialLinks[]
  projects      Projects[]
  education     Education[]
  experience    Experience[]
  aboutCards    About[]
  skills        Skills[]
  contactResponses  ContactFormResponses[]
}

model SocialLinks {
  id            Int                @id @default(autoincrement())
  user          User?          @relation(fields: [username], references: [username], onDelete: Cascade, onUpdate: Cascade)
  username      String
  linkName      String
  url           String
}

model Projects {
  id            Int                @id @default(autoincrement())
  user          User?          @relation(fields: [username], references: [username], onDelete: Cascade, onUpdate: Cascade)
  username      String?
  name          String
  description   String
  liveLink      String
  github        String
  category      String
  date          DateTime
  thumbnail     String
  techUsed      String[]
}

model Education {
  id            Int                @id @default(autoincrement())
  user          User?          @relation(fields: [username], references: [username], onDelete: Cascade, onUpdate: Cascade)
  username      String?
  priority      Int
  from          String
  to            String
  institution   String
  description   String
  percentage    String
}

model Experience {
  id            Int                @id @default(autoincrement())
  user          User?          @relation(fields: [username], references: [username], onDelete: Cascade, onUpdate: Cascade)
  username      String
  role          String
  company       String
  from          String
  to            String
  priority      Int
  description   String
}

model About{
  id            Int                @id @default(autoincrement())
  user          User?          @relation(fields: [username], references: [username], onDelete: Cascade, onUpdate: Cascade)
  username      String
  title         String
  description   String
}

model Skills{
  id            Int                @id @default(autoincrement())
  user          User?          @relation(fields: [username], references: [username], onDelete: Cascade, onUpdate: Cascade)
  username      String
  title         String
  percentage    String
}

model ContactFormResponses {
  id            Int                @id @default(autoincrement())
  user          User?          @relation(fields: [username], references: [username], onDelete: Cascade, onUpdate: Cascade)
  username      String
  senderName    String
  senderMail    String
  message       String
  date          DateTime        @default(now())
}